buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "maven"
apply plugin: 'idea'

idea {
    module {
        inheritOutputDirs = true
    }
}

compileJava.options.encoding = 'UTF-8'

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

group = config.group_name
version = "${config.minecraft_version}-${config.mod_version}"
archivesBaseName = "${config.mod_id}"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version //+ "-1.10.0" // grab latest forge
    mappings = config.mappings_version
    runDir = "run"
    replace '@MOD_VERSION@', config.mod_version
    replace '@MINECRAFT_VERSION@', config.minecraft_version
}

processResources {
    // replace stuff in the files we want.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replaces
        expand ([
            'mod_version': config.mod_version,
            'forge_version': config.forge_version,
            'minecraft_version': config.minecraft_version,
        ])
    }

    // copy everything else that we didnt do before
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

// Add Access Transformers Manifest
jar {
    manifest {
        attributes 'FMLAT': 'MenuMobs_at.cfg'
    }
}

dependencies {
    compile files('libs/')
}